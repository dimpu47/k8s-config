apiVersion: apps/v1
kind: Deployment
metadata:
  name: fulstack-app
  labels:
    app: fulstack-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fulstack-app
  template:
    metadata:
      labels:
        app: fulstack-app
    spec:
      containers:
        - name: backend
          image: gaurawesome/backend-app:a9ee0b3e70e8ed39ce571765f23b5dbb9a626e4a
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: postgres://postgres:postgres@db:5432/postgres?sslmode=disable
          readinessProbe:
            httpGet:
              path: /api/go/users
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: frontend
          image: gaurawesome/frontend-app:a9ee0b3e70e8ed39ce571765f23b5dbb9a626e4a
          ports:
            - containerPort: 3000
          env:
            - name: NEXT_PUBLIC_API_URL
              value: http://localhost:8000 # Since both are in the same pod, localhost can be used
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
      restartPolicy: Always

---
# Service for the fulstack deployment
apiVersion: v1
kind: Service
metadata:
  name: fulstack-app-service
spec:
  selector:
    app: fulstack-app
  ports:
    - name: backend-port
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: frontend-port
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer # You can use NodePort if LoadBalancer is not available

---
# HPA configuration
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: fulstack-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fulstack-app
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
